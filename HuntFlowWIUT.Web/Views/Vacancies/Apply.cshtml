@model HuntFlowWIUT.Web.Models.ViewModels.ApplicantCreationViewModel

@{
    ViewData["Title"] = "Apply for Vacancy - Type Admin";
    // Assume ViewBag.Countries contains a list of SelectListItem for Citizenship
    var countries = ViewBag.Countries as IEnumerable<SelectListItem>;
    //var countries = Model.Countries;
    var accountId = ViewBag.AccountId ?? "3360";
    var authToken = ViewBag.AuthToken ?? "";
}

<div class="max-w-3xl mx-auto p-8 bg-white shadow-lg rounded-lg">
    <h2 class="text-3xl font-bold text-center mb-6">Application Form</h2>

    <!-- Display global validation summary -->
    @Html.ValidationSummary(true, "", new { @class = "text-red-600 mb-4" })

    @if (ViewBag.ErrorList != null)
    {
        <div class="mb-4 p-4 bg-red-100 text-red-700 rounded">
            <ul>
                @foreach (var error in ViewBag.ErrorList as List<string>)
                {
                    <li>@error</li>
                }
            </ul>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="mb-4 p-4 bg-red-100 text-red-700 rounded">@TempData["ErrorMessage"]</div>
    }

    <form asp-action="Apply" method="post" enctype="multipart/form-data" id="applicationForm" class="space-y-6">
        <!-- Resume Upload -->
        <div>
            <label class="block text-lg font-semibold text-gray-700 mb-2">Resume Upload (PDF file)</label>
            <input type="file" id="resumeUpload" name="ResumeFile" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" accept=".pdf" />
            <span asp-validation-for="ResumeFile" class="text-red-600"></span>
        </div>
        <!-- Hidden field for Resume file ID -->
        <input type="hidden" id="ExternalFileId" name="Externals[0].Files[0]" value="" />

        <!-- Basic Info Section -->
        <div class="space-y-4">
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">Position applied for*</label>
                <input asp-for="Position" class="w-full px-3 py-2 border border-gray-300 rounded bg-gray-100 cursor-not-allowed" readonly />
                <span asp-validation-for="Position" class="text-red-600"></span>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">First Name*</label>
                    <input asp-for="FirstName" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                    <span asp-validation-for="FirstName" class="text-red-600"></span>
                </div>
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">Last Name*</label>
                    <input asp-for="LastName" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                    <span asp-validation-for="LastName" class="text-red-600"></span>
                </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">Date of birth*</label>
                    <input asp-for="Birthday" type="text" class="datepicker w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                    <span asp-validation-for="Birthday" class="text-red-600"></span>
                </div>
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">Place of birth*</label>
                    <input asp-for="PlaceOfBirth" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                    <span asp-validation-for="PlaceOfBirth" class="text-red-600"></span>
                </div>
            </div>
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">Citizenship*</label>
                <select asp-for="CitizenshipId" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" asp-items="Model.Countries">
                    <option value="">Select a country</option>
                </select>
                <span asp-validation-for="CitizenshipId" class="text-red-600"></span>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">Contact telephone numbers*</label>
                    <input asp-for="Phone" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                    <span asp-validation-for="Phone" class="text-red-600"></span>
                </div>
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">E-mail Address*</label>
                    <input asp-for="Email" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                    <span asp-validation-for="Email" class="text-red-600"></span>
                </div>
            </div>
        </div>

        <!-- Photo Upload -->
        <div>
            <label class="block text-lg font-semibold text-gray-700 mb-2">Photo Upload (image file)</label>
            <input type="file" id="photoUpload" name="PhotoFile" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" accept="image/*" />
            <span asp-validation-for="PhotoFile" class="text-red-600"></span>
        </div>
        <!-- Hidden field for Photo file ID -->

        <!-- Additional Fields -->
        <div class="space-y-4">
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">How did you hear about this vacancy?</label>
                <input asp-for="HowDidYouHear" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                <span asp-validation-for="HowDidYouHear" class="text-red-600"></span>
            </div>
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">Social networking profiles (if applicable):</label>
                <input asp-for="SocialProfiles" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                <span asp-validation-for="SocialProfiles" class="text-red-600"></span>
            </div>
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">Have you ever been convicted of a crime?*</label>
                <select asp-for="Convicted" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500">
                    <option value="false">No</option>
                    <option value="true">Yes</option>
                </select>
                <span asp-validation-for="Convicted" class="text-red-600"></span>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">Are you currently working at WIUT?*</label>
                    <select asp-for="CurrentlyWorkingAtWIUT" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500">
                        <option value="false">No</option>
                        <option value="true">Yes</option>
                    </select>
                    <span asp-validation-for="CurrentlyWorkingAtWIUT" class="text-red-600"></span>
                </div>
                <div>
                    <label class="block text-lg font-semibold text-gray-700 mb-2">Have you applied for any position at WIUT before?*</label>
                    <select asp-for="AppliedBeforeAtWIUT" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500">
                        <option value="false">No</option>
                        <option value="true">Yes</option>
                    </select>
                    <span asp-validation-for="AppliedBeforeAtWIUT" class="text-red-600"></span>
                </div>
            </div>
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">Do you have relatives who are currently employed at WIUT?*</label>
                <select asp-for="HasRelativesAtWIUT" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500">
                    <option value="false">No</option>
                    <option value="true">Yes</option>
                </select>
                <span asp-validation-for="HasRelativesAtWIUT" class="text-red-600"></span>
            </div>
        </div>

        <!-- Employment Section (Dynamic) -->
        <hr class="my-6" />
        <h3 class="text-2xl font-semibold text-gray-700 mb-4">Employment Section</h3>
        <div id="employmentSection">
            <div class="employment-block bg-gray-50 rounded-lg shadow-sm p-4 mb-4">
                <h5 class="card-title text-xl font-bold mb-2">Employment 1</h5>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">From date</label>
                    <input type="text" name="EmploymentBlocks[0].FromDate" class="w-full px-3 py-2 border border-gray-300 rounded datepicker" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">To date</label>
                    <input type="text" name="EmploymentBlocks[0].ToDate" class="w-full px-3 py-2 border border-gray-300 rounded datepicker" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Full or Part Time</label>
                    <select name="EmploymentBlocks[0].FullOrPartTime" class="w-full px-3 py-2 border border-gray-300 rounded">
                        <option value="Full">Full</option>
                        <option value="Part">Part</option>
                    </select>
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Name of Employer (Institution)</label>
                    <input type="text" name="EmploymentBlocks[0].EmployerName" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Position in Organisation</label>
                    <input type="text" name="EmploymentBlocks[0].PositionInOrg" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Summary of main duties</label>
                    <textarea name="EmploymentBlocks[0].MainDuties" class="w-full px-3 py-2 border border-gray-300 rounded"></textarea>
                </div>
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Name and contacts of Supervisor</label>
                    <input type="text" name="EmploymentBlocks[0].SupervisorInfo" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
                <!-- No delete button for first block -->
            </div>
        </div>
        <button type="button" id="addEmployment" class="w-full bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">Add more employment</button>

        <!-- Supervisor Contact Checkbox -->
        <div class="mt-6">
            <div class="flex items-center">
                <input type="checkbox" asp-for="AllowSupervisorContact" class="form-checkbox h-5 w-5 text-blue-600" />
                <label asp-for="AllowSupervisorContact" class="ml-2 text-gray-700">Please tick if you do not mind your supervisors to be contacted by HR Department as part of the reference check.</label>
            </div>
        </div>

        <!-- Education Section -->
        <hr class="my-6" />
        <h3 class="text-2xl font-semibold text-gray-700 mb-4">Education and Qualifications</h3>
        <div id="educationSection">
            <div class="education-block bg-gray-50 rounded-lg shadow-sm p-4 mb-4">
                <h5 class="card-title text-xl font-bold mb-2">Education 1</h5>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">From date</label>
                    <input type="text" name="EducationBlocks[0].FromDate" class="w-full px-3 py-2 border border-gray-300 rounded datepicker" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">To date</label>
                    <input type="text" name="EducationBlocks[0].ToDate" class="w-full px-3 py-2 border border-gray-300 rounded datepicker" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Full or Part Time</label>
                    <select name="EducationBlocks[0].FullOrPartTime" class="w-full px-3 py-2 border border-gray-300 rounded">
                        <option value="Full">Full</option>
                        <option value="Part">Part</option>
                    </select>
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Name of Institution, place and country</label>
                    <input type="text" name="EducationBlocks[0].InstitutionInfo" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Qualifications</label>
                    <input type="text" name="EducationBlocks[0].Qualifications" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
            </div>
        </div>
        <button type="button" id="addEducation" class="w-full bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">Add more education</button>

        <!-- Practical Training Section -->
        <hr class="my-6" />
        <h3 class="text-2xl font-semibold text-gray-700 mb-4">Practical Training</h3>
        <div id="practicalTrainingSection">
            <div class="practical-block bg-gray-50 rounded-lg shadow-sm p-4 mb-4">
                <h5 class="card-title text-xl font-bold mb-2">Practical Training 1</h5>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">From date</label>
                    <input type="text" name="PracticalTrainingBlocks[0].FromDate" class="w-full px-3 py-2 border border-gray-300 rounded datepicker" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">To date</label>
                    <input type="text" name="PracticalTrainingBlocks[0].ToDate" class="w-full px-3 py-2 border border-gray-300 rounded datepicker" />
                </div>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Name of Organisation</label>
                    <input type="text" name="PracticalTrainingBlocks[0].OrganisationName" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Qualification / Certification</label>
                    <input type="text" name="PracticalTrainingBlocks[0].Certification" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
            </div>
        </div>
        <button type="button" id="addPracticalTraining" class="w-full bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">Add more practical training</button>

        <!-- Languages Section -->
        <hr class="my-6" />
        <h3 class="text-2xl font-semibold text-gray-700 mb-4">Languages</h3>
        <div id="languageSection">
            <div class="language-block bg-gray-50 rounded-lg shadow-sm p-4 mb-4">
                <h5 class="card-title text-xl font-bold mb-2">Language 1</h5>
                <div class="mb-2">
                    <label class="block text-gray-700 font-medium mb-1">Language name</label>
                    <input type="text" name="LanguageBlocks[0].LanguageName" class="w-full px-3 py-2 border border-gray-300 rounded" />
                </div>
                <div class="grid grid-cols-3 gap-4">
                    <div>
                        <label class="block text-gray-700 font-medium mb-1">Reading (1-5)</label>
                        <select name="LanguageBlocks[0].Reading" class="w-full px-3 py-2 border border-gray-300 rounded">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label class="block text-gray-700 font-medium mb-1">Writing (1-5)</label>
                        <select name="LanguageBlocks[0].Writing" class="w-full px-3 py-2 border border-gray-300 rounded">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label class="block text-gray-700 font-medium mb-1">Speaking (1-5)</label>
                        <select name="LanguageBlocks[0].Speaking" class="w-full px-3 py-2 border border-gray-300 rounded">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <button type="button" id="addLanguage" class="w-full bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">Add more languages</button>

        <!-- Additional Fields -->
        <hr class="my-6" />
        <div class="space-y-4">
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">What is your motivation to join us?</label>
                <textarea asp-for="Motivation" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500"></textarea>
                <span asp-validation-for="Motivation" class="text-red-600"></span>
            </div>
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">What specific skills do you possess that are relevant for the position?</label>
                <textarea asp-for="SpecificSkills" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500"></textarea>
                <span asp-validation-for="SpecificSkills" class="text-red-600"></span>
            </div>
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2">Is there anything else you’d like to share to support your application?</label>
                <textarea asp-for="AdditionalInfo" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500"></textarea>
                <span asp-validation-for="AdditionalInfo" class="text-red-600"></span>
            </div>
            <div>
                <label class="block text-lg font-semibold text-gray-700 mb-2" for="socialProfile">Social networking profiles (if applicable):</label>
                <input type="text" id="socialProfile" name="Social[0].Value" class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring focus:border-blue-500" />
                <span asp-validation-for="Social[0].Value" class="text-red-600"></span>
            </div>
        </div>

        <!-- Declaration and Submission Date -->
        <hr class="my-6" />
        <div class="flex items-center">
            <input type="checkbox" asp-for="Declaration" class="form-checkbox h-5 w-5 text-blue-600" />
            <label asp-for="Declaration" class="ml-2 text-gray-700">I declare that the information provided on this application form is true and correct to the best of my knowledge.</label>
            <span asp-validation-for="Declaration" class="text-red-600"></span>
        </div>
        <input type="hidden" asp-for="SubmissionDate" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" />

        <!-- Hidden fields for merged data and external resume -->
        <input type="hidden" asp-for="MergedApplicationData" id="MergedDataHidden" />
        <input type="hidden" id="ExternalFileId" name="Externals[0].Files[0]" value="0" />
        <input type="hidden" id="PhotoFileId" name="Photo" value="0" />


        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 rounded">Submit Application</button>
    </form>
</div>
<!-- Include jQuery and toastr JS (if not already included in your layout) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
@* <script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        // Attach flatpickr to the birthday input
        flatpickr("#Birthday", {
            dateFormat: "Y-m-d",
            // Optionally, you can set additional options here, e.g., maxDate, minDate, etc.
            maxDate: "today"
        });
    });

    $(document).ready(function () {
        $("#resumeFile").on("change", function () {
            var file = this.files[0];
            console.log(file);
            if (file) {
                var formData = new FormData();
                formData.append("file", file);

                var accountId = '@(ViewBag.AccountId ?? "3360")';
                var proxyUrl = '/api/proxy/upload?accountId=' + accountId;

                $.ajax({
                    url: proxyUrl,
                    type: 'POST',
                    headers: {
                        // "Authorization": "Bearer " + authToken, // Remove this for testing if not required by your proxy
                        "X-File-Parse": "true"
                    },
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        console.log("Upload response:", response);
                        $("#ExternalFileId").val(response.id);
                        toastr.success("File uploaded successfully.");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("Upload error:", textStatus, errorThrown);
                        toastr.error("Error uploading file.");
                    }
                });
            }
        });
    });

    // Dynamic add-more functionality for employment (example shown)
    var employmentCount = 1;
    $("#addEmployment").click(function () {
        if (employmentCount < 10) {
            var newBlock = $(".employment-block").first().clone();
            newBlock.find("input, select, textarea").each(function () {
                var name = $(this).attr("name");
                if (name) {
                    $(this).attr("name", name.replace("EmploymentBlocks[0]", "EmploymentBlocks[" + employmentCount + "]"));
                }
                $(this).val("");
            });
            // Append a delete button if not present
            if (!newBlock.find(".deleteEmployment").length) {
                newBlock.append('<button type="button" class="btn btn-danger deleteEmployment">Delete</button>');
            }
            $("#employmentSection").append(newBlock);
            employmentCount++;
        }
    });
    $(document).on("click", ".deleteEmployment", function () {
        $(this).closest(".employment-block").remove();
        employmentCount--;
    });

    // Similar dynamic functionality can be added for education, practical training, and language sections.

    // Merge form data into one big string on form submit (excluding PhotoFile and ResumeFile)
    $("#applicationForm").on("submit", function () {
        var merged = "";
        merged += "Position applied for: " + $("input[name='Position']").val() + "\n";
        merged += "First Name: " + $("input[name='FirstName']").val() + "\n";
        merged += "Last Name: " + $("input[name='LastName']").val() + "\n";
        merged += "Date of birth: " + $("input[name='Birthday']").val() + "\n";
        merged += "Place of birth: " + $("input[name='PlaceOfBirth']").val() + "\n";
        merged += "Citizenship: " + $("select[name='CitizenshipId']").val() + "\n";
        merged += "Contact telephone numbers: " + $("input[name='Phone']").val() + "\n";
        merged += "E-mail Address: " + $("input[name='Email']").val() + "\n";
        merged += "How did you hear about this vacancy?: " + $("input[name='HowDidYouHear']").val() + "\n";
        merged += "Social networking profiles: " + $("input[name='SocialProfiles']").val() + "\n";
        merged += "Convicted: " + $("select[name='Convicted']").val() + "\n";
        merged += "Currently working at WIUT: " + $("select[name='CurrentlyWorkingAtWIUT']").val() + "\n";
        merged += "Applied before at WIUT: " + $("select[name='AppliedBeforeAtWIUT']").val() + "\n";
        merged += "Relatives employed at WIUT: " + $("select[name='HasRelativesAtWIUT']").val() + "\n";

        // Employment blocks merging
        $(".employment-block").each(function (index) {
            merged += "Employment Block " + (index + 1) + ":\n";
            merged += "  From: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.FromDate']").val() + "\n";
            merged += "  To: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.ToDate']").val() + "\n";
            merged += "  Full/Part Time: " + $(this).find("select[name^='EmploymentBlocks']").filter("[name$='.FullOrPartTime']").val() + "\n";
            merged += "  Employer: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.EmployerName']").val() + "\n";
            merged += "  Position: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.PositionInOrg']").val() + "\n";
            merged += "  Duties: " + $(this).find("textarea[name^='EmploymentBlocks']").filter("[name$='.MainDuties']").val() + "\n";
            merged += "  Supervisor: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.SupervisorInfo']").val() + "\n";
        });
        // (For education, practical training, and languages, you would do similar merging.)
        merged += "Motivation: " + $("textarea[name='Motivation']").val() + "\n";
        merged += "Specific Skills: " + $("textarea[name='SpecificSkills']").val() + "\n";
        merged += "Additional Info: " + $("textarea[name='AdditionalInfo']").val() + "\n";
        merged += "Declaration: " + ($("input[name='Declaration']").is(":checked") ? "Yes" : "No") + "\n";

        $("#MergedDataHidden").val(merged);
    });
</script>
 *@

<script type="text/javascript">
    // Initialize Flatpickr for all date inputs
    flatpickr("input.datepicker", { dateFormat: "Y-m-d" });

    // Dynamic Add/Remove for Employment Section
        var employmentCount = 1;
    $("#addEmployment").click(function () {
        if (employmentCount < 10) {
            var newBlock = $(".employment-block").first().clone();

            // Update names and clear values
            newBlock.find("input, select, textarea").each(function () {
                var name = $(this).attr("name");
                if (name) {
                    $(this).attr("name", name.replace("EmploymentBlocks[0]", "EmploymentBlocks[" + employmentCount + "]"));
                }
                $(this).val("");
            });

            // Update block title
            newBlock.find(".card-title").text("Employment " + (employmentCount + 1));

            // Append a delete button if not present
            if (!newBlock.find(".deleteEmployment").length) {
                newBlock.append('<button type="button" class="deleteEmployment mt-4 inline-block bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Delete</button>');
            }

            // Append the block
            $("#employmentSection").append(newBlock);

            // Reinitialize flatpickr on new datepicker inputs in the cloned block
            newBlock.find("input.datepicker").each(function () {
                // Destroy any existing instance (if present)
                if (this._flatpickr) {
                    this._flatpickr.destroy();
                }
                flatpickr(this, { dateFormat: "Y-m-d" });
            });

            employmentCount++;
        }
    });
    $(document).on("click", ".deleteEmployment", function () {
        $(this).closest(".employment-block").remove();
        employmentCount--;
    });

    // Dynamic Add/Remove for Education Section
    var educationCount = 1;
    $("#addEducation").click(function () {
        if (educationCount < 10) {
            var newBlock = $(".education-block").first().clone();
            newBlock.find("input, select, textarea").each(function () {
                var name = $(this).attr("name");
                if (name) {
                    $(this).attr("name", name.replace("EducationBlocks[0]", "EducationBlocks[" + educationCount + "]"));
                }
                $(this).val("");
            });
            newBlock.find(".card-title").text("Education " + (educationCount + 1));
            if (!newBlock.find(".deleteEducation").length) {
                newBlock.append('<button type="button" class="deleteEducation inline-block bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Delete</button>');
            }
            $("#educationSection").append(newBlock);
            newBlock.find("input.datepicker").each(function () {
                // Destroy any existing instance (if present)
                if (this._flatpickr) {
                    this._flatpickr.destroy();
                }
                flatpickr(this, { dateFormat: "Y-m-d" });
            });
            educationCount++;
        }
    });
    $(document).on("click", ".deleteEducation", function () {
        $(this).closest(".education-block").remove();
        educationCount--;
    });

    // Dynamic Add/Remove for Practical Training Section
    var practicalCount = 1;
    $("#addPracticalTraining").click(function () {
        if (practicalCount < 10) {
            var newBlock = $(".practical-block").first().clone();
            newBlock.find("input, select, textarea").each(function () {
                var name = $(this).attr("name");
                if (name) {
                    $(this).attr("name", name.replace("PracticalTrainingBlocks[0]", "PracticalTrainingBlocks[" + practicalCount + "]"));
                }
                $(this).val("");
            });
            newBlock.find(".card-title").text("Practical Training " + (practicalCount + 1));
            if (!newBlock.find(".deletePractical").length) {
                newBlock.append('<button type="button" class="deletePractical inline-block bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Delete</button>');
            }
            $("#practicalTrainingSection").append(newBlock);
            newBlock.find("input.datepicker").each(function () {
                // Destroy any existing instance (if present)
                if (this._flatpickr) {
                    this._flatpickr.destroy();
                }
                flatpickr(this, { dateFormat: "Y-m-d" });
            });
            practicalCount++;
        }
    });
    $(document).on("click", ".deletePractical", function () {
        $(this).closest(".practical-block").remove();
        practicalCount--;
    });

    // Dynamic Add/Remove for Languages Section
    var languageCount = 1;
    $("#addLanguage").click(function () {
        if (languageCount < 10) {
            var newBlock = $(".language-block").first().clone();
            newBlock.find("input, select, textarea").each(function () {
                var name = $(this).attr("name");
                if (name) {
                    $(this).attr("name", name.replace("LanguageBlocks[0]", "LanguageBlocks[" + languageCount + "]"));
                }
                $(this).val("");
            });
            newBlock.find(".card-title").text("Language " + (languageCount + 1));
            if (!newBlock.find(".deleteLanguage").length) {
                newBlock.append('<button type="button" class="deleteLanguage inline-block bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">Delete</button>');
            }
            $("#languageSection").append(newBlock);
            languageCount++;
        }
    });
    $(document).on("click", ".deleteLanguage", function () {
        $(this).closest(".language-block").remove();
        languageCount--;
    });

    // File Upload for Resume Upload (PDF)
    $(document).ready(function () {
        $("#resumeUpload").on("change", function () {
            var file = this.files[0];
            if (file) {
                var formData = new FormData();
                formData.append("file", file);
                var proxyUrl = '/api/proxy/upload?accountId=' + '@(ViewBag.AccountId ?? "3360")';
                var authToken = '@(ViewBag.AuthToken ?? "")';
                $.ajax({
                    url: proxyUrl,
                    type: 'POST',
                    headers: {
                        "Authorization": "Bearer " + authToken,
                        "X-File-Parse": "true"
                    },
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        console.log("Upload response:", response);
                        $("#ExternalFileId").val(response.id);
                        toastr.success("Resume uploaded successfully.");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("Upload error:", textStatus, errorThrown);
                        toastr.error("Error uploading file.");
                    }
                });
            }
        });
        $("#photoUpload").on("change", function () {
            var file = this.files[0];
            if (file) {
                var formData = new FormData();
                formData.append("file", file);
                var proxyUrl = '/api/proxy/upload?accountId=' + '@(ViewBag.AccountId ?? "3360")' + '&isPhoto=true';
                var authToken = '@(ViewBag.AuthToken ?? "")';
                $.ajax({
                    url: proxyUrl,
                    type: 'POST',
                    headers: {
                        "Authorization": "Bearer " + authToken,
                        "X-File-Parse": "false"
                    },
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        console.log("Photo upload response:", response);
                        $("#PhotoFileId").val(response.id);
                        toastr.success("Photo uploaded successfully.");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("Upload error:", textStatus, errorThrown);
                        toastr.error("Error uploading file.");
                    }
                });
            }
        });
    });

    // Merge form data into a single pretty printed string on form submit
    $("#applicationForm").on("submit", function () {
        console.log("Form submit event fired");
        var merged = "";
        merged += "Position applied for: " + $("input[name='Position']").val() + "\n";
        merged += "First Name: " + $("input[name='FirstName']").val() + "\n";
        merged += "Last Name: " + $("input[name='LastName']").val() + "\n";
        merged += "Date of birth: " + $("input[name='Birthday']").val() + "\n";
        merged += "Place of birth: " + $("input[name='PlaceOfBirth']").val() + "\n";
        merged += "Citizenship: " + $("select[name='CitizenshipId']").val() + "\n";
        merged += "Contact telephone numbers: " + $("input[name='Phone']").val() + "\n";
        merged += "E-mail Address: " + $("input[name='Email']").val() + "\n";
        merged += "How did you hear about this vacancy?: " + $("input[name='HowDidYouHear']").val() + "\n";
        merged += "Social networking profiles: " + $("input[name='Social[0].Value']").val() + "\n";
        merged += "Convicted: " + $("select[name='Convicted']").val() + "\n";
        merged += "Currently working at WIUT: " + $("select[name='CurrentlyWorkingAtWIUT']").val() + "\n";
        merged += "Applied before at WIUT: " + $("select[name='AppliedBeforeAtWIUT']").val() + "\n";
        merged += "Relatives at WIUT: " + $("select[name='HasRelativesAtWIUT']").val() + "\n";

        // Merge Employment blocks
        $(".employment-block").each(function (index) {
            merged += "Employment Block " + (index + 1) + ":\n";
            merged += "  From: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.FromDate']").val() + "\n";
            merged += "  To: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.ToDate']").val() + "\n";
            merged += "  Full/Part Time: " + $(this).find("select[name^='EmploymentBlocks']").filter("[name$='.FullOrPartTime']").val() + "\n";
            merged += "  Employer: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.EmployerName']").val() + "\n";
            merged += "  Position: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.PositionInOrg']").val() + "\n";
            merged += "  Duties: " + $(this).find("textarea[name^='EmploymentBlocks']").filter("[name$='.MainDuties']").val() + "\n";
            merged += "  Supervisor: " + $(this).find("input[name^='EmploymentBlocks']").filter("[name$='.SupervisorInfo']").val() + "\n";
        });

        // Merge Education blocks
        $(".education-block").each(function (index) {
            merged += "Education Block " + (index + 1) + ":\n";
            merged += "  From: " + $(this).find("input[name^='EducationBlocks']").filter("[name$='.FromDate']").val() + "\n";
            merged += "  To: " + $(this).find("input[name^='EducationBlocks']").filter("[name$='.ToDate']").val() + "\n";
            merged += "  Full/Part Time: " + $(this).find("select[name^='EducationBlocks']").filter("[name$='.FullOrPartTime']").val() + "\n";
            merged += "  Institution: " + $(this).find("input[name^='EducationBlocks']").filter("[name$='.InstitutionInfo']").val() + "\n";
            merged += "  Qualifications: " + $(this).find("input[name^='EducationBlocks']").filter("[name$='.Qualifications']").val() + "\n";
        });

        // Merge Practical Training blocks
        $(".practical-block").each(function (index) {
            merged += "Practical Training Block " + (index + 1) + ":\n";
            merged += "  From: " + $(this).find("input[name^='PracticalTrainingBlocks']").filter("[name$='.FromDate']").val() + "\n";
            merged += "  To: " + $(this).find("input[name^='PracticalTrainingBlocks']").filter("[name$='.ToDate']").val() + "\n";
            merged += "  Organisation: " + $(this).find("input[name^='PracticalTrainingBlocks']").filter("[name$='.OrganisationName']").val() + "\n";
            merged += "  Certification: " + $(this).find("input[name^='PracticalTrainingBlocks']").filter("[name$='.Certification']").val() + "\n";
        });

        // Merge Language blocks
        $(".language-block").each(function (index) {
            merged += "Language Block " + (index + 1) + ":\n";
            merged += "  Language: " + $(this).find("input[name^='LanguageBlocks']").filter("[name$='.LanguageName']").val() + "\n";
            merged += "  Reading: " + $(this).find("select[name^='LanguageBlocks']").filter("[name$='.Reading']").val() + "\n";
            merged += "  Writing: " + $(this).find("select[name^='LanguageBlocks']").filter("[name$='.Writing']").val() + "\n";
            merged += "  Speaking: " + $(this).find("select[name^='LanguageBlocks']").filter("[name$='.Speaking']").val() + "\n";
        });

        merged += "Motivation: " + $("textarea[name='Motivation']").val() + "\n";
        merged += "Specific Skills: " + $("textarea[name='SpecificSkills']").val() + "\n";
        merged += "Additional Info: " + $("textarea[name='AdditionalInfo']").val() + "\n";
        merged += "Declaration: " + ($("input[name='Declaration']").is(":checked") ? "Yes" : "No") + "\n";

        $("#MergedDataHidden").val(merged);
    });
</script>
